import { test, expect } from '@playwright/test';

test('test', async ({ page }) => {
  await page.goto('https://nfm-fe.i4ulabs.com/login');
  await page.getByRole('textbox', { name: 'Email' }).click();
  await page.getByRole('textbox', { name: 'Email' }).fill('user@gmail.com');
  await page.getByRole('textbox', { name: 'Password' }).click();
  await page.getByRole('textbox', { name: 'Password' }).fill('admin123');
  await page.getByRole('button', { name: 'Sign in' }).click();
  await page.getByRole('link', { name: 'Crops Crops' }).click();
  await page.getByRole('link', { name: 'Growth Stage' }).click();
  await page.getByRole('button', { name: '+ ADD STAGE' }).click();
  await page.getByRole('textbox', { name: 'Stage Name' }).click();
  await page.getByRole('textbox', { name: 'Stage Name' }).fill('Test');
  await page.getByRole('textbox', { name: 'Description' }).click();
  await page.getByRole('textbox', { name: 'Description' }).fill('Test');
await page.getByRole('button', { name: 'Save STAGE' }).click();
  await expect(page.locator('tbody tr').filter({ hasText: 'Test' })).toBeVisible({ timeout: 30000 });
  //------------------------------------------------------------------------
  const testName = 'Test English2';
const row = page.locator('tbody tr').filter({ hasText: 'Test' });
  await row.locator('button:has(svg.lucide-pencil)').click();
  await page.getByRole('textbox', { name: 'Stage Name' }).click();
  await page.getByRole('textbox', { name: 'Stage Name' }).fill(testName);
  await page.getByRole('button', { name: 'UPDATE' }).click();
  await expect(page.locator('tbody tr').filter({ hasText: testName })).toBeVisible;
  const row2 = page.locator('tbody tr').filter({ hasText: testName });
  await row2.locator('button:has(svg.lucide-pencil)').click();
  await page.getByRole('combobox').filter({ hasText: 'English' }).click();
  await page.getByRole('option', { name: 'Hindi' }).click();
  await page.getByRole('textbox', { name: 'अवस्था का नाम' }).click();
  await page.getByRole('textbox', { name: 'अवस्था का नाम' }).fill(testName+'Test hindi6');
  await page.getByRole('button', { name: 'अद्यतन करें' }).click();
  await page.getByRole('button', { name: 'Language English' }).click();
  await page.getByRole('menuitem', { name: 'Hindi Hindi' }).click();
  await expect(page.locator('tbody tr').filter({ hasText: testName+'Test hindi6' })).toBeVisible;
  await page.getByRole('button', { name: 'Language Hindi' }).click();
   await page.getByText('English').click();
 const row1 = page.locator('tbody tr').filter({ hasText: testName });
  await row1.locator('button:has(svg.lucide-pencil)').click();
  await page.getByRole('combobox').filter({ hasText: 'English' }).click();
  await page.getByRole('option', { name: 'Tamil' }).click();
await page.getByRole('textbox', { name: 'நிலையின் பெயர்' }).click();
  await page.getByRole('textbox', { name: 'நிலையின் பெயர்' }).fill('Test Tamil');
  await page.getByRole('button', { name: 'புதுப்பிக்கவும்' }).click();
  await page.getByRole('button', { name: 'Language English' }).click();
  await page.getByRole('menuitem', { name: 'Tamil Tamil' }).click();
  await expect(page.locator('tbody tr').filter({ hasText: testName+'Test tamil5' })).toBeVisible;

  await page.getByRole('button', { name: 'Language Tamil' }).click();
  await page.getByText('English').click();
const row4 = page.locator('tbody tr').filter({ hasText: testName });
await row4.locator('button:has(svg.lucide-ban)').click({ timeout: 30000 });
 await page.getByRole('button', { name: 'Delete' }).click();
await expect(page.locator('tbody tr').filter({ hasText: testName })).toHaveCount(0);
});