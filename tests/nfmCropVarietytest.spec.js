import { test, expect } from '@playwright/test';
import path from 'path';

test('test variety ', async ({ page }) => {
  await page.goto('https://nfm-fe.i4ulabs.com/login');
  await page.getByRole('textbox', { name: 'Email' }).click();
  await page.getByRole('textbox', { name: 'Email' }).fill('user@gmail.com');
  await page.getByRole('textbox', { name: 'Password' }).click();
  await page.getByRole('textbox', { name: 'Password' }).fill('admin123');
  await page.getByRole('button', { name: 'Sign in' }).click();
  await expect(page).toHaveURL('https://nfm-fe.i4ulabs.com/app/dashboard');
  await page.getByRole('link', { name: 'Crops Crops' }).click();
  await page.getByRole('link', { name: 'Variety', exact: true }).click();
  await expect(page.getByRole('button', { name: '+ ADD VARIETY' })).toBeVisible();
  await page.getByRole('button', { name: '+ ADD VARIETY' }).click();
  await expect(page.getByText('Upload Image')).toBeVisible();
 const fileInput = page.locator('input[type="file"]');
   const filePath = path.resolve('tests/assets/Screenshot from 2025-10-09 14-41-50.png');
   await fileInput.setInputFiles(filePath);
   await expect.soft(fileInput).toHaveValue(/Screenshot/);
  await page.waitForTimeout(1000);
  await page.locator('#cropType').click();
  await page.getByText('Apple').click();
  await expect(page.locator('#cropType')).toContainText('Apple');
  await page.getByRole('combobox').filter({ hasText: 'Select Company Name' }).click();
  await page.getByText('Crop Company 1').click();
  await page.getByRole('textbox', { name: 'Select Crop Name' }).click();
  await page.getByRole('textbox', { name: 'Select Crop Name' }).fill('Test1');
  await expect(page.getByRole('textbox', { name: 'Select Crop Name' })).toHaveValue('Test1');
  await page.getByRole('img', { name: 'toggle' }).click();
  await page.getByPlaceholder('Enter Number of Days').first().click();
  await page.getByPlaceholder('Enter Number of Days').first().fill('20');
  await expect(page.getByPlaceholder('Enter Number of Days').first()).toHaveValue('20');
  await page.getByPlaceholder('Enter rate Percentage').click();
  await page.getByPlaceholder('Enter rate Percentage').fill('20');
  await expect(page.getByPlaceholder('Enter rate Percentage')).toHaveValue('20');
  await page.getByPlaceholder('Enter Number of Days').nth(1).click();
  await page.getByPlaceholder('Enter Number of Days').nth(1).fill('19');
  await expect(page.getByPlaceholder('Enter Number of Days').nth(1)).toHaveValue('19');
  await page.getByPlaceholder('Enter Yeild').click();
  await page.getByPlaceholder('Enter Yeild').fill('2');
  await expect(page.getByPlaceholder('Enter Yeild')).toHaveValue('2');
  await page.getByRole('combobox').filter({ hasText: 'Select Treatment' }).click();
  await page.getByRole('option', { name: 'Treated', exact: true }).click();
  await page.getByRole('textbox', { name: 'Enter Diseases(Press Enter to' }).click();
  await page.getByRole('textbox', { name: 'Enter Diseases(Press Enter to' }).fill('Test');
  await expect(page.getByRole('textbox', { name: 'Enter Diseases(Press Enter to' })).toHaveValue('Test');
  await page.getByRole('combobox').filter({ hasText: 'Enter Number of Days' }).click();
  await page.getByRole('option', { name: 'Gms' }).click();
  await page.getByPlaceholder('Enter Packaging Size').click();
  await page.getByPlaceholder('Enter Packaging Size').fill('20');
  await expect(page.getByPlaceholder('Enter Packaging Size')).toHaveValue('20');
  await page.getByRole('combobox').filter({ hasText: 'Select Packaging Unit' }).click();
  await page.getByText('Packet', { exact: true }).click();
  await page.getByRole('textbox', { name: 'Enter Diseases(Press Enter to' }).click();
  await page.getByPlaceholder('Enter Number of Days').nth(2).click();
  await page.getByPlaceholder('Enter Number of Days').nth(2).fill('19');
  await expect(page.getByPlaceholder('Enter Number of Days').nth(2)).toHaveValue('19');
  await page.getByPlaceholder('Enter Spacing Value', { exact: true }).click();
  await page.getByPlaceholder('Enter Spacing Value', { exact: true }).fill('2');
  await expect(page.getByPlaceholder('Enter Spacing Value', { exact: true })).toHaveValue('2');
  await page.getByRole('combobox').filter({ hasText: 'Select Unit' }).first().click();
  await page.getByRole('option', { name: 'Cms' }).click();
  await page.getByPlaceholder('Select Unit').click();
  await page.getByPlaceholder('Select Unit').fill('2');
  await expect(page.getByPlaceholder('Select Unit')).toHaveValue('2');
  await page.getByRole('combobox').filter({ hasText: 'Select Unit' }).first().click();
  await page.getByText('Mms').click();
  await page.getByPlaceholder('Enter spacing value', { exact: true }).click();
  await page.getByPlaceholder('Enter spacing value', { exact: true }).fill('2');
  await expect(page.getByPlaceholder('Enter spacing value', { exact: true })).toHaveValue('2');
  await page.getByRole('combobox').filter({ hasText: 'Select Unit' }).click();
  await page.getByRole('option', { name: 'Inch' }).click();
  await page.getByRole('textbox', { name: 'Enter information here' }).first().click();
  await page.getByRole('textbox', { name: 'Enter information here' }).first().fill('Test');
  await expect(page.getByRole('textbox', { name: 'Enter information here' }).first()).toHaveValue('Test');
  await page.getByRole('textbox', { name: 'Enter information here' }).nth(1).click();
  await page.getByRole('textbox', { name: 'Enter information here' }).nth(1).fill('Test');
  await expect(page.getByRole('textbox', { name: 'Enter information here' }).nth(1)).toHaveValue('Test');
  await page.getByRole('button', { name: 'SAVE VARIETY' }).click();
  await page.waitForTimeout(2000);
  await expect(page.locator('tbody tr').filter({ hasText: 'test1' })).toBeVisible({ timeout: 30000 });

});